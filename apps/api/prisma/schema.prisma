// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  email        String        @unique
  password     String
  avatar       String?
  isVerify     Boolean       @default(false)
  point        Int           @default(0)
  phoneNumber  String           @unique
  referralCode String        @unique
  referral     String?
  createdAt    DateTime      @default(now())
  // updatedAt     DateTime      @updatedAt
  Transaction  Transaction[]
  Review       Review[]
}

model EO {
  id        Int      @id @default(autoincrement())
  creator   String   @unique
  email     String   @unique
  password  String
  avatar    String?
  isVerify  Boolean  @default(false)
  createdAt DateTime @default(now())
  // updatedAt DateTime @updatedAt
  Event     Event[]
}

enum TicketType {
  free
  paid
}

enum Category {
  music
  anime
  game
  sport
}

model Event {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  description String
  price       Float
  date        DateTime
  location    String
  image       String
  seats       Int
  ticketType  TicketType
  createdAt   DateTime      @default(now())
  // updatedAt   DateTime      @updatedAt
  category    Category
  Transaction Transaction[]
  Review      Review[]
  Promotion   Promotion[]
  eOId        Int
  eo          EO            @relation(fields: [eOId], references: [id])
}

model Transaction {
  id Int @id @default(autoincrement())

  user_id       Int
  totalPrice    Float
  totalDiscount Float
  finalPrice    Float
  quantity      Int
  createdAt     DateTime @default(now())
  proof         String
  // updatedAt     DateTime @updatedAt
  eventId       Int
  userId        Int
  event         Event    @relation(fields: [eventId], references: [id])
  user          User     @relation(fields: [userId], references: [id])
}

model Review {
  id      Int    @id @default(autoincrement())
  review  String
  ratings Int
  userId  Int
  eventId Int
  user    User   @relation(fields: [userId], references: [id])
  event   Event  @relation(fields: [eventId], references: [id])
}

model Promotion {
  id          Int      @id @default(autoincrement())
  startDate   DateTime
  endDate     DateTime
  voucherCode String
  quota       Int
  percentage  Int
  eventId     Int
  event       Event    @relation(fields: [eventId], references: [id])
}
